{"version":3,"file":"static/js/387.0eefd777.chunk.js","mappings":"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","sources":["components/Message/Message.styled.jsx","components/Message/Message.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","hooks/useFetch.js","services/movies.service.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { colors } from 'constants';\n\nexport const MessageStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n\n  & div {\n    color: #ffffffb3;\n    border-radius: 5px;\n    padding: 7px 24px 7px 24px;\n    border-left: 2px solid ${colors.color2};\n    border-right: 2px solid ${colors.color2};\n    font-size: 18px;\n    background-image: repeating-linear-gradient(\n      135deg,\n      rgb(0 0 0 / 0.01),\n      rgb(0 0 0 / 0.01) 5px,\n      rgba(255, 234, 0, 0.134) 5px,\n      rgba(255, 255, 255, 0) 10px\n    );\n  }\n`;\n","import { MessageStyled } from './Message.styled';\n\nconst Message = ({ children }) => {\n  return (\n    <MessageStyled>\n      <div>{children}</div>\n    </MessageStyled>\n  );\n};\n\nexport default Message;\n","import styled from '@emotion/styled';\n\nexport const ReviewsStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  margin-top: 30px;\n\n  & li {\n    & .author {\n      font-size: 20px;\n      font-weight: 500;\n      margin-bottom: 10px;\n      color: #fff;\n    }\n\n    & .content {\n      font-size: 16px;\n      font-weight: 400;\n      color: #ffffff97;\n      line-height: 1.6;\n      word-break: break-word;\n    }\n  }\n`;\n","import { ReviewsStyled } from './Reviews.styled';\nimport { useParams } from 'react-router-dom';\nimport { useFetchPages } from './../../hooks/useFetch';\nimport { useCallback, useState } from 'react';\nimport { getReviews } from 'services';\nimport { fetchStatus } from './../../constants/fetch.status';\nimport { Button } from './../Styled/Button.styled';\nimport Message from 'components/Message/Message';\nimport { Loader } from 'components/Styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [page, setPage] = useState(1);\n\n  const getMovieReviews = useCallback(async () => {\n    return await getReviews({ movieId, page });\n  }, [movieId, page]);\n\n  const { data, status } = useFetchPages(getMovieReviews, page === 1);\n\n  const { results: reviews, totalPages, reachedEnd } = data;\n\n  const loadMore = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <>\n      {reviews && reviews.lenth !== 0 && (\n        <ReviewsStyled>\n          {reviews.map(({ id, author, content }, index) => (\n            <li key={index}>\n              <div className=\"author\">{author}</div>\n              <div className=\"content\">{content}</div>\n            </li>\n          ))}\n        </ReviewsStyled>\n      )}\n\n      {reviews && !reviews.lenth && reviews.lenth !== undefined && (\n        <Message>We don't have any reviews for this movie</Message>\n      )}\n\n      {status === fetchStatus.LOADING && <Loader className=\"pending\" />}\n\n      {totalPages > 1 && !reachedEnd && status !== fetchStatus.LOADING && (\n        <Button type=\"button\" onClick={loadMore}>\n          Load more\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import { fetchStatus } from 'constants';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport const useFetch = (callback, isInitialRequest) => {\n  const [data, setData] = useState({});\n  const [status, setStatus] = useState(fetchStatus.IDLE);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setStatus(fetchStatus.LOADING);\n      try {\n        const data = await callback();\n        setData(data);\n        setStatus(fetchStatus.SUCCESS);\n      } catch (error) {\n        toast.error(error.message);\n        setStatus(fetchStatus.ERROR);\n      }\n    };\n\n    fetchData();\n  }, [callback, isInitialRequest]);\n\n  return { data, status };\n};\n\nexport const useFetchPages = (callback, isInitialRequest) => {\n  const [data, setData] = useState({});\n  const [status, setStatus] = useState(fetchStatus.IDLE);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setStatus(fetchStatus.LOADING);\n      try {\n        const data = await callback();\n        setData(prev =>\n          isInitialRequest\n            ? data\n            : { ...prev, results: [...prev.results, ...data.results] }\n        );\n        if (\n          data.results !== undefined &&\n          data.results.length !== 0 &&\n          data.page === 1\n        ) {\n          // toast.success(`We found ${data.total} movies`);\n        }\n        setStatus(fetchStatus.SUCCESS);\n      } catch (error) {\n        toast.error(error.message);\n        setStatus(fetchStatus.ERROR);\n      }\n    };\n\n    fetchData();\n  }, [callback, isInitialRequest]);\n\n  return { data, status };\n};\n","import axios from 'axios';\nimport { theMovieDBApiKey } from 'constants';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: theMovieDBApiKey,\n};\n\nexport const findMoviesByQuery = async ({ query, page }) => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n\n  const { results, total_pages: totalPages, total_results: total } = data;\n  const reachedEnd = totalPages === page;\n\n  return { results, totalPages, total, reachedEnd, page };\n};\n\nexport const getTrandingMovies = async ({ page, filter }) => {\n  const { data } = await axios.get(`trending/movie/${filter}`, {\n    params: {\n      page,\n    },\n  });\n\n  const { results, total_pages: totalPages, total_results: total } = data;\n  const reachedEnd = totalPages === page;\n\n  return { results, totalPages, total, reachedEnd, page };\n};\n\nexport const getMovieDetailsById = async ({ movieId }) => {\n  const { data } = await axios.get(`movie/${movieId}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\nexport const getCast = async ({ movieId }) => {\n  const { data } = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\nexport const getReviews = async ({ movieId, page }) => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n      page,\n    },\n  });\n\n  const { results, total_pages: totalPages, total_results: total } = data;\n  const reachedEnd = totalPages === page;\n\n  return { results, totalPages, total, reachedEnd, page };\n};\n"],"names":["MessageStyled","styled","colors","children","ReviewsStyled","movieId","useParams","useState","page","setPage","getMovieReviews","useCallback","getReviews","useFetchPages","data","status","reviews","results","totalPages","reachedEnd","lenth","map","index","id","author","content","className","undefined","Message","fetchStatus","type","onClick","useFetch","callback","isInitialRequest","setData","setStatus","useEffect","fetchData","toast","message","prev","length","axios","api_key","theMovieDBApiKey","findMoviesByQuery","query","params","total_pages","total","total_results","getTrandingMovies","filter","getMovieDetailsById","language","getCast"],"sourceRoot":""}
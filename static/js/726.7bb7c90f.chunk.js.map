{"version":3,"file":"static/js/726.7bb7c90f.chunk.js","mappings":"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","sources":["components/Message/Message.styled.jsx","components/Message/Message.jsx","hooks/useFetch.js","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Form.styled.jsx","components/Searchbar/Input.styled.jsx","components/Searchbar/SearchButton.styled.jsx","components/Searchbar/SearchButton.jsx","components/Searchbar/Searchbar.jsx","components/MovieThumbs/MovieThumbItem.styled.jsx","components/MovieThumbs/MovieThumbItem.jsx","components/MovieThumbs/MovieThumbs.styled.jsx","components/MovieThumbs/MovieThumbs.jsx","components/PopularQueries/PopularQueries.styled.jsx","components/PopularQueries/PopularQueries.jsx","pages/Movies.jsx","services/movies.service.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { colors } from 'constants';\n\nexport const MessageStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n\n  & div {\n    color: #ffffffb3;\n    border-radius: 5px;\n    padding: 7px 24px 7px 24px;\n    border-left: 2px solid ${colors.color2};\n    border-right: 2px solid ${colors.color2};\n    font-size: 18px;\n    background-image: repeating-linear-gradient(\n      135deg,\n      rgb(0 0 0 / 0.01),\n      rgb(0 0 0 / 0.01) 5px,\n      rgba(255, 234, 0, 0.134) 5px,\n      rgba(255, 255, 255, 0) 10px\n    );\n  }\n`;\n","import { MessageStyled } from './Message.styled';\n\nconst Message = ({ children }) => {\n  return (\n    <MessageStyled>\n      <div>{children}</div>\n    </MessageStyled>\n  );\n};\n\nexport default Message;\n","import { fetchStatus } from 'constants';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport const useFetch = (callback, isInitialRequest) => {\n  const [data, setData] = useState({});\n  const [status, setStatus] = useState(fetchStatus.IDLE);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setStatus(fetchStatus.LOADING);\n      try {\n        const data = await callback();\n        setData(data);\n        setStatus(fetchStatus.SUCCESS);\n      } catch (error) {\n        toast.error(error.message);\n        setStatus(fetchStatus.ERROR);\n      }\n    };\n\n    fetchData();\n  }, [callback, isInitialRequest]);\n\n  return { data, status };\n};\n\nexport const useFetchPages = (callback, isInitialRequest) => {\n  const [data, setData] = useState({});\n  const [status, setStatus] = useState(fetchStatus.IDLE);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setStatus(fetchStatus.LOADING);\n      try {\n        const data = await callback();\n        console.log(data);\n        setData(prev =>\n          isInitialRequest\n            ? data\n            : { ...prev, results: [...prev.results, ...data.results] }\n        );\n        if (\n          data.results !== undefined &&\n          data.results.length !== 0 &&\n          data.page === 1\n        ) {\n          // toast.success(`We found ${data.total} movies`);\n        }\n        setStatus(fetchStatus.SUCCESS);\n      } catch (error) {\n        toast.error(error.message);\n        setStatus(fetchStatus.ERROR);\n      }\n    };\n\n    fetchData();\n  }, [callback, isInitialRequest]);\n\n  return { data, status };\n};\n","import styled from '@emotion/styled';\n\nexport const SearchbarStyled = styled.header`\n  backdrop-filter: blur(2px);\n  padding: 10px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 30px;\n  position: sticky;\n  top: 0;\n  z-index: 4;\n`;\n","import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form`\n  position: relative;\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { transition } from 'helpers';\n\nexport const Input = styled.input`\n  border-radius: 0px;\n  border: 0;\n  outline: none;\n  padding: 8px 36px 8px 2px;\n  font-size: 18px;\n  width: 280px;\n  max-width: 100%;\n  background-color: rgb(0, 0, 0, 0);\n  border-bottom: 1px solid #555;\n  color: #fff;\n  ${transition('width', 'border-bottom')}\n\n  &::placeholder {\n    color: #969696;\n  }\n\n  &:not(:placeholder-shown),\n  &:focus {\n    width: 360px;\n    border-bottom: 1px solid ${colors.color1};\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { transition } from 'helpers';\n\nexport const SearchButtonStyled = styled.button`\n  position: absolute;\n  right: 0px;\n  top: 0px;\n  height: 100%;\n  width: 36px;\n  border-radius: 3px;\n  border: 0;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgb(255, 255, 255, 0);\n  cursor: pointer;\n  ${transition('background-color')}\n\n  &:hover svg {\n    fill: ${colors.color1};\n  }\n\n  & svg {\n    fill: #ccc;\n    width: 20px;\n    height: 20px;\n    ${transition('fill')}\n  }\n`;\n","import { IoIosSearch } from 'react-icons/io';\nimport { SearchButtonStyled } from './SearchButton.styled';\n\nconst Button = () => {\n  return (\n    <SearchButtonStyled>\n      <IoIosSearch />\n    </SearchButtonStyled>\n  );\n};\n\nexport default Button;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchbarStyled } from './Searchbar.styled';\nimport { FormStyled } from './Form.styled';\nimport { Input } from './Input.styled';\nimport SearchButton from './SearchButton';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Searchbar = ({ searchQuery, onHandleSearch }) => {\n  const [query, setQuery] = useState('');\n  const [searchParams] = useSearchParams();\n\n  const searchParamsQuery = searchParams.get('query');\n\n  useEffect(() => {\n    setQuery(searchQuery);\n  }, [searchQuery]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    onHandleSearch(query);\n  };\n\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <SearchbarStyled>\n      <FormStyled onSubmit={submitHandler}>\n        <Input\n          name=\"searchQuery\"\n          type=\"text\"\n          value={query || searchParamsQuery || ''}\n          placeholder=\"Search movies\"\n          onChange={handleInputChange}\n        />\n        <SearchButton type=\"submit\" />\n      </FormStyled>\n    </SearchbarStyled>\n  );\n};\n\nSearchbar.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n  onHandleSearch: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { transition } from 'helpers';\n\nexport const MovieThumbItemStyled = styled.li`\n  flex-basis: calc((100% - 4 * 20px) / 5);\n  flex-grow: 0;\n  flex-shrink: 0;\n  overflow: hidden;\n  border-radius: 7px;\n  position: relative;\n  box-shadow: 0px 1px 5px -2px rgb(0 0 0 / 0.25);\n  background-color: rgb(255, 255, 255, 0.03);\n  cursor: pointer;\n  position: relative;\n  padding: 3px 3px 10px 3px;\n  overflow: hidden;\n  display: flex;\n  ${transition('transform', 'box-shadow')}\n\n  @media screen and (max-width: 1500px) {\n    flex-basis: calc((100% - 20px * 2) / 3);\n  }\n\n  @media screen and (max-width: 1200px) {\n    flex-basis: calc((100% - 20px * 1) / 2);\n  }\n\n  @media screen and (max-width: 800px) {\n    flex-basis: 100%;\n  }\n\n  &:hover {\n    transform: scale(1.03);\n    box-shadow: 0px 0px 150px 5px ${colors.color1},\n      0px 50px 80px 15px rgb(0, 0, 0, 1);\n    z-index: 3;\n\n    & .item {\n      color: rgb(255, 255, 255, 0.8) !important;\n    }\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: 0;\n    left: -150%;\n    top: -50%;\n    width: 400%;\n    height: 200%;\n    background: conic-gradient(\n      rgb(255, 205, 29, 0.3),\n      rgb(255, 205, 29, 1),\n      rgb(255, 205, 29, 0.3),\n      rgb(255, 205, 29, 1),\n      rgb(255, 205, 29, 0.3)\n    );\n    transform-origin: center;\n    animation: animate 6s linear infinite;\n    opacity: 0;\n    ${transition('opacity')};\n  }\n\n  &:hover::before {\n    opacity: 1;\n  }\n\n  @keyframes animate {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  & .container {\n    background-color: rgb(31, 30, 43);\n    border: none;\n    outline: none;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    cursor: pointer;\n    border-radius: 5px;\n    overflow: hidden;\n    position: relative;\n    z-index: 1;\n    display: flex;\n    flex-direction: column;\n  }\n\n  & .image-wrapper {\n    overflow: hidden;\n    position: relative;\n\n    &::after {\n      content: '';\n      display: block;\n      padding-top: 135%;\n    }\n  }\n\n  & .image {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  & img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  & .title {\n    font-size: 16px;\n    color: #ffffffc3;\n    padding: 12px 12px;\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  &:hover .title {\n    color: ${colors.color2};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MovieThumbItemStyled } from './MovieThumbItem.styled';\n\nconst MovieThumbItem = ({ movie }) => {\n  const { id, poster_path, title } = movie;\n\n  const location = useLocation();\n\n  return (\n    <MovieThumbItemStyled>\n      <Link to={`${id}`} state={{ from: location }} className=\"container\">\n        <div className=\"image-wrapper\">\n          <div className=\"image\">\n            <img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n            />\n          </div>\n        </div>\n        <div className=\"title\">{title}</div>\n      </Link>\n    </MovieThumbItemStyled>\n  );\n};\n\nMovieThumbItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number,\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieThumbItem;\n","import styled from '@emotion/styled';\n\nexport const MovieThumbsStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-top: 30px;\n  margin-bottom: 70px;\n`;\n","import MovieThumbItem from './MovieThumbItem';\nimport { MovieThumbsStyled } from './MovieThumbs.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieThumbs = ({ movies }) => {\n  return (\n    <MovieThumbsStyled>\n      {movies.map(\n        (movie, index) =>\n          movie.poster_path && <MovieThumbItem key={index} movie={movie} />\n      )}\n    </MovieThumbsStyled>\n  );\n};\n\nMovieThumbs.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MovieThumbs;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { transition } from 'helpers';\n\nexport const PopularQueriesStyled = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  background-color: rgb(255, 255, 255, 0);\n  margin-bottom: 50px;\n  ${transition('background-color')}\n\n  & .query {\n    background-color: rgb(0, 0, 0, 0.1);\n    padding: 4px 12px;\n    border-radius: 20px;\n    color: #ffffffcd;\n    font-weight: 300;\n    border-left: 2px solid ${colors.color2};\n    border-right: 2px solid ${colors.color2};\n    box-shadow: 0px 0px 8px -1px ${colors.color2};\n    cursor: pointer;\n    ${transition('color', 'box-shadow', 'background-color')}\n\n    &:hover {\n      color: ${colors.color2};\n      box-shadow: 0px 0px 10px 0px ${colors.color1};\n    }\n\n    &.active {\n      border-left: 2px solid ${colors.color1};\n      border-right: 2px solid ${colors.color1};\n      color: ${colors.color1};\n      box-shadow: 0px 0px 14px 3px ${colors.color1};\n    }\n  }\n\n  & .title {\n    color: #ffffffbf;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { PopularQueriesStyled } from './PopularQueries.styled';\n\nconst PopularQueries = ({\n  queries,\n  searchQuery,\n  searchURLQuery,\n  OnHandlePopularQuery,\n}) => {\n  return (\n    <PopularQueriesStyled>\n      <div className=\"title\">Popular queries</div>\n      {queries.map(query => (\n        <div\n          key={query}\n          onClick={() => OnHandlePopularQuery(query)}\n          className={`query ${\n            query === searchQuery || query === searchURLQuery ? 'active' : ''\n          }`}\n        >\n          {query}\n        </div>\n      ))}\n    </PopularQueriesStyled>\n  );\n};\n\nPopularQueries.propTypes = {\n  queries: PropTypes.arrayOf(PropTypes.string).isRequired,\n  searchQuery: PropTypes.string,\n  searchURLQuery: PropTypes.string,\n  OnHandlePopularQuery: PropTypes.func.isRequired,\n};\n\nexport default PopularQueries;\n","import Searchbar from 'components/Searchbar/Searchbar';\nimport { Button, Loader } from 'components/Styled';\nimport { fetchStatus } from 'constants';\nimport { useFetchPages } from 'hooks/useFetch';\nimport { useState, useCallback, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { findMoviesByQuery } from 'services';\nimport MovieThumbs from './../components/MovieThumbs/MovieThumbs';\nimport Message from './../components/Message/Message';\nimport { BiUpArrow } from 'react-icons/bi';\nimport PopularQueries from './../components/PopularQueries/PopularQueries';\nimport { POPULAR_QUERIES } from 'constants';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const URLparams = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  const getMovies = useCallback(async () => {\n    return await findMoviesByQuery({ query: query || URLparams.query, page });\n  }, [URLparams, query, page]);\n\n  const { data, status } = useFetchPages(getMovies, page === 1);\n\n  const { results: movies, totalPages } = data;\n\n  const handleChangeQuery = query => {\n    setSearchParams(query !== '' ? { query } : {});\n    setQuery(query);\n    setPage(1);\n  };\n\n  const loadMore = () => {\n    setPage(page + 1);\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo(0, 0);\n  };\n\n  const handleSearch = searchQuery => {\n    const query = searchQuery.replace(/[&?=]/g, '').toLowerCase().trim();\n    setSearchParams(query !== '' ? { query } : {});\n    setQuery(query);\n    setPage(1);\n  };\n\n  const reachedEnd = totalPages === page;\n\n  return (\n    <>\n      <Searchbar onHandleSearch={handleChangeQuery} searchQuery={query} />\n\n      <PopularQueries\n        queries={POPULAR_QUERIES}\n        searchQuery={query}\n        searchURLQuery={URLparams.query}\n        OnHandlePopularQuery={handleSearch}\n      />\n\n      {movies !== undefined && movies.length !== 0 && (\n        <MovieThumbs movies={movies} />\n      )}\n\n      {movies && movies.lenth === 0 && (query || searchParams.get('query')) && (\n        <Message>Sorry, we couldn't find any results</Message>\n      )}\n\n      {movies && !movies.lenth && !query && !searchParams.get('query') && (\n        <Message>Please enter or select search query</Message>\n      )}\n\n      {reachedEnd && page !== 1 && (\n        <>\n          <Message>That's all we have</Message>\n          <Button type=\"button\" className=\"icon\" onClick={scrollToTop}>\n            <BiUpArrow />\n          </Button>\n        </>\n      )}\n\n      {status === fetchStatus.LOADING && <Loader className=\"pending\" />}\n\n      {totalPages > 1 && !reachedEnd && status !== fetchStatus.LOADING && (\n        <Button type=\"button\" onClick={loadMore}>\n          Load more\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { theMovieDBApiKey } from 'constants';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: theMovieDBApiKey,\n};\n\nexport const findMoviesByQuery = async ({ query, page }) => {\n  console.log(query);\n  const { data } = await axios.get('search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n\n  const { results, total_pages: totalPages, total_results: total } = data;\n  const reachedEnd = totalPages === page;\n\n  console.log('page: ', page);\n  console.log('totalPages: ', totalPages);\n  console.log('reachedEnd: ', reachedEnd);\n\n  return { results, totalPages, total, reachedEnd, page };\n};\n\nexport const getTrandingMovies = async ({ page, filter }) => {\n  const { data } = await axios.get(`trending/movie/${filter}`, {\n    params: {\n      page,\n    },\n  });\n\n  const { results, total_pages: totalPages, total_results: total } = data;\n  const reachedEnd = totalPages === page;\n\n  return { results, totalPages, total, reachedEnd, page };\n};\n\nexport const getMovieDetailsById = async ({ movieId }) => {\n  const { data } = await axios.get(`movie/${movieId}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\nexport const getCast = async ({ movieId }) => {\n  const { data } = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  console.log(data);\n\n  return data;\n};\n\nexport const getReviews = async ({ movieId, page }) => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n      page,\n    },\n  });\n\n  const { results, total_pages: totalPages, total_results: total } = data;\n  const reachedEnd = totalPages === page;\n\n  return { results, totalPages, total, reachedEnd, page };\n};\n"],"names":["MessageStyled","styled","colors","children","useFetch","callback","isInitialRequest","useState","data","setData","fetchStatus","status","setStatus","useEffect","fetchData","toast","message","useFetchPages","console","log","prev","results","undefined","length","page","SearchbarStyled","FormStyled","Input","transition","SearchButtonStyled","searchQuery","onHandleSearch","query","setQuery","useSearchParams","searchParamsQuery","get","onSubmit","e","preventDefault","name","type","value","placeholder","onChange","target","SearchButton","MovieThumbItemStyled","movie","id","poster_path","title","location","useLocation","to","state","from","className","src","alt","MovieThumbsStyled","movies","map","index","PopularQueriesStyled","queries","searchURLQuery","OnHandlePopularQuery","onClick","setPage","searchParams","setSearchParams","URLparams","useMemo","Object","fromEntries","getMovies","useCallback","findMoviesByQuery","totalPages","reachedEnd","POPULAR_QUERIES","replace","toLowerCase","trim","lenth","Message","window","scrollTo","axios","api_key","theMovieDBApiKey","params","total_pages","total","total_results","getTrandingMovies","filter","getMovieDetailsById","movieId","language","getCast","getReviews"],"sourceRoot":""}
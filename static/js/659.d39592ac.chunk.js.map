{"version":3,"file":"static/js/659.d39592ac.chunk.js","mappings":"yMAGaA,EAAiBC,EAAAA,EAAAA,IAAH,oFAChBC,EAAAA,GAAAA,O,2KCAEC,EAAW,SAACC,EAAUC,GACjC,OAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAASG,EAAAA,GAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBF,EAAUF,EAAAA,GAAAA,SADM,kBAGKL,IAHL,OAGRG,EAHQ,OAIdC,EAAQD,GACRI,EAAUF,EAAAA,GAAAA,SALI,gDAOdK,EAAAA,GAAAA,MAAY,KAAMC,SAClBJ,EAAUF,EAAAA,GAAAA,OARI,yDAAH,qDAYfI,GACD,GAAE,CAACT,EAAUC,IAEP,CAAEE,KAAAA,EAAMG,OAAAA,EAChB,EAEYM,EAAgB,SAACZ,EAAUC,GACtC,OAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAASG,EAAAA,GAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KA6BA,OA3BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBF,EAAUF,EAAAA,GAAAA,SADM,kBAGKL,IAHL,OAGRG,EAHQ,OAIdC,GAAQ,SAAAS,GAAI,OACVZ,EACIE,GADY,kBAEPU,GAFO,IAEDC,QAAQ,GAAD,eAAMD,EAAKC,UAAX,OAAuBX,EAAKW,WAHxC,SAMOC,IAAjBZ,EAAKW,SACHX,EAAKW,QAAQE,QACfb,EAAKc,KAIPV,EAAUF,EAAAA,GAAAA,SAhBI,kDAkBdK,EAAAA,GAAAA,MAAY,KAAMC,SAClBJ,EAAUF,EAAAA,GAAAA,OAnBI,0DAAH,qDAuBfI,GACD,GAAE,CAACT,EAAUC,IAEP,CAAEE,KAAAA,EAAMG,OAAAA,EAChB,C,kJCvDYY,EAAmBrB,EAAAA,EAAAA,IAAH,+cAWrBC,EAAAA,GAAAA,QAMFqB,EAAAA,EAAAA,GAAW,UAAW,c,6BCP5B,EAVmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,OACE,SAACF,EAAD,WACE,UAAC,KAAD,CAAMG,GAAID,EAAUE,UAAU,OAA9B,WACE,SAAC,MAAD,IADF,YAKL,ECRYC,EAAa1B,EAAAA,EAAAA,IAAH,0gDA4BVC,EAAAA,GAAAA,OAIEA,EAAAA,GAAAA,OAiBFA,EAAAA,GAAAA,QAKPqB,EAAAA,EAAAA,GAAW,WAcJrB,EAAAA,GAAAA,OAYkBA,EAAAA,GAAAA,OACCA,EAAAA,GAAAA,Q,UChChC,EAjDa,SAAC,GAAc,IAAZK,EAAW,EAAXA,KACNqB,EAAiErB,EAAjEqB,MAAOC,EAA0DtB,EAA1DsB,YAAaC,EAA6CvB,EAA7CuB,OAAQC,EAAqCxB,EAArCwB,SAAUC,EAA2BzB,EAA3ByB,aAAcC,EAAa1B,EAAb0B,SAC5D,OACE,UAACN,EAAD,YACE,gBAAKD,UAAU,QAAf,UACE,gBACEQ,IAAG,yCAAoCL,GACvCM,IAAKP,OAGT,iBAAKF,UAAU,OAAf,WACE,gBAAKA,UAAU,QAAf,SAAwBE,KACxB,iBAAKF,UAAU,OAAf,4BACgB,0BAAOM,QAEvB,gBAAKN,UAAU,WAAf,SAA2BK,IAE1BE,IACC,eACEG,KAAMH,EACNI,OAAO,SACPX,UAAU,OACVY,IAAI,sBAJN,WAME,SAAC,MAAD,CAAeZ,UAAU,SAN3B,uBAUF,gBAAKA,UAAU,SAAf,SACGI,EAAOS,KAAI,SAAAC,GAAI,OACd,0BAAqBA,EAAKC,MAAfD,EAAKE,GADF,WAOzB,ECnCYC,GAAU1C,EAAAA,EAAAA,GAAO2C,EAAAA,GAAP3C,CAAH,qjBAKGC,EAAAA,GAAAA,QAGnBqB,EAAAA,EAAAA,GAAW,UAAW,cAIQrB,EAAAA,GAAAA,OAIrBA,EAAAA,GAAAA,OACmBA,EAAAA,GAAAA,OAUNA,EAAAA,GAAAA,Q,iDCU1B,EAhCqB,WAAO,IAAD,IACjB2C,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,EAAY,qBAFDC,EAAAA,EAAAA,MAEaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAEvCC,GAAkBC,EAAAA,EAAAA,cAAW,iBAAC,+FACrBC,EAAAA,EAAAA,IAAoB,CAAER,QAAAA,IADD,mFAEjC,CAACA,IAEJ,GAAyB1C,EAAAA,EAAAA,GAASgD,GAA1B5C,EAAR,EAAQA,KAAMG,EAAd,EAAcA,OAEd,OACE,4BACE,SAAC,EAAD,CAAYc,SAAUuB,IACrBrC,IAAWD,EAAAA,GAAAA,SAAuBF,GAAQA,EAAKmC,KAC9C,iCACE,SAAC,EAAD,CAAMnC,KAAMA,KACZ,SAAC,IAAD,sCACA,SAACoC,EAAD,CAASlB,GAAI,OAAQwB,MAAO,CAAEC,KAAMH,GAApC,mBAGA,SAACJ,EAAD,CAASlB,GAAI,UAAWwB,MAAO,CAAEC,KAAMH,GAAvC,yBAKJ,SAAC,KAAD,MAGL,C,6MCrCDO,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAASC,EAAAA,IAGJ,IAAMC,EAAiB,mCAAG,0GAASC,EAAT,EAASA,MAAOrC,EAAhB,EAAgBA,KAAhB,SACRiC,EAAAA,EAAAA,IAAU,eAAgB,CAC/CK,OAAQ,CACND,MAAAA,EACArC,KAAAA,KAJ2B,uBACvBd,EADuB,EACvBA,KAOAW,EAA2DX,EAA3DW,QAAsB0C,EAAqCrD,EAAlDsD,YAAwCC,EAAUvD,EAAzBwD,cACpCC,EAAaJ,IAAevC,EATH,kBAWxB,CAAEH,QAAAA,EAAS0C,WAAAA,EAAYE,MAAAA,EAAOE,WAAAA,EAAY3C,KAAAA,IAXlB,2CAAH,sDAcjB4C,EAAiB,mCAAG,0GAAS5C,EAAT,EAASA,KAAM6C,EAAf,EAAeA,OAAf,SACRZ,EAAAA,EAAAA,IAAA,yBAA4BY,GAAU,CAC3DP,OAAQ,CACNtC,KAAAA,KAH2B,uBACvBd,EADuB,EACvBA,KAMAW,EAA2DX,EAA3DW,QAAsB0C,EAAqCrD,EAAlDsD,YAAwCC,EAAUvD,EAAzBwD,cACpCC,EAAaJ,IAAevC,EARH,kBAUxB,CAAEH,QAAAA,EAAS0C,WAAAA,EAAYE,MAAAA,EAAOE,WAAAA,EAAY3C,KAAAA,IAVlB,2CAAH,sDAajBgC,EAAmB,mCAAG,gGAASR,EAAT,EAASA,QAAT,SACVS,EAAAA,EAAAA,IAAA,gBAAmBT,GAAW,CACnDc,OAAQ,CACNQ,SAAU,WAHmB,uBACzB5D,EADyB,EACzBA,KADyB,kBAO1BA,GAP0B,2CAAH,sDAUnB6D,EAAO,mCAAG,gGAASvB,EAAT,EAASA,QAAT,SACES,EAAAA,EAAAA,IAAA,gBAAmBT,EAAnB,YAAsC,CAC3Dc,OAAQ,CACNQ,SAAU,WAHO,uBACb5D,EADa,EACbA,KADa,kBAOdA,GAPc,2CAAH,sDAUP8D,EAAU,mCAAG,0GAASxB,EAAT,EAASA,QAASxB,EAAlB,EAAkBA,KAAlB,SACDiC,EAAAA,EAAAA,IAAA,gBAAmBT,EAAnB,YAAsC,CAC3Dc,OAAQ,CACNQ,SAAU,QACV9C,KAAAA,KAJoB,uBAChBd,EADgB,EAChBA,KAOAW,EAA2DX,EAA3DW,QAAsB0C,EAAqCrD,EAAlDsD,YAAwCC,EAAUvD,EAAzBwD,cACpCC,EAAaJ,IAAevC,EATV,kBAWjB,CAAEH,QAAAA,EAAS0C,WAAAA,EAAYE,MAAAA,EAAOE,WAAAA,EAAY3C,KAAAA,IAXzB,2CAAH,qD","sources":["components/Styled/Subtitle.styled.jsx","hooks/useFetch.js","components/BackButton/BackButton.styled.jsx","components/BackButton/BackButton.jsx","components/Card/Card.styled.jsx","components/Card/Card.jsx","components/Styled/LinkTab.styled.jsx","pages/MovieDetails.jsx","services/movies.service.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { colors } from 'constants';\n\nexport const SubtitleStyled = styled.div`\n  color: ${colors.color1};\n  font-size: 20px;\n  margin: 30px 0 30px 0;\n`;\n","import { fetchStatus } from 'constants';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport const useFetch = (callback, isInitialRequest) => {\n  const [data, setData] = useState({});\n  const [status, setStatus] = useState(fetchStatus.IDLE);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setStatus(fetchStatus.LOADING);\n      try {\n        const data = await callback();\n        setData(data);\n        setStatus(fetchStatus.SUCCESS);\n      } catch (error) {\n        toast.error(error.message);\n        setStatus(fetchStatus.ERROR);\n      }\n    };\n\n    fetchData();\n  }, [callback, isInitialRequest]);\n\n  return { data, status };\n};\n\nexport const useFetchPages = (callback, isInitialRequest) => {\n  const [data, setData] = useState({});\n  const [status, setStatus] = useState(fetchStatus.IDLE);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setStatus(fetchStatus.LOADING);\n      try {\n        const data = await callback();\n        setData(prev =>\n          isInitialRequest\n            ? data\n            : { ...prev, results: [...prev.results, ...data.results] }\n        );\n        if (\n          data.results !== undefined &&\n          !!data.results.length &&\n          data.page === 1\n        ) {\n          // toast.success(`We found ${data.total} movies`);\n        }\n        setStatus(fetchStatus.SUCCESS);\n      } catch (error) {\n        toast.error(error.message);\n        setStatus(fetchStatus.ERROR);\n      }\n    };\n\n    fetchData();\n  }, [callback, isInitialRequest]);\n\n  return { data, status };\n};\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { transition } from 'helpers';\n\nexport const BackButtonStyled = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n\n  & .link {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    background: linear-gradient(\n      90deg,\n      rgb(242, 255, 0) 0%,\n      ${colors.color1} 100%\n    );\n    color: #000000;\n    padding: 5px 20px 5px 10px;\n    border-radius: 20px;\n    box-shadow: 5px 0px 5px 0px rgb(0, 0, 0, 0.3);\n    ${transition('opacity', 'transform')};\n\n    &:hover {\n      opacity: 0.8;\n      transform: scale(1.1);\n    }\n  }\n`;\n","import { BackButtonStyled } from './BackButton.styled';\nimport { Link } from 'react-router-dom';\nimport { BsChevronLeft } from 'react-icons/bs';\n\nconst BackButton = ({ backlink }) => {\n  return (\n    <BackButtonStyled>\n      <Link to={backlink} className=\"link\">\n        <BsChevronLeft /> Back\n      </Link>\n    </BackButtonStyled>\n  );\n};\n\nexport default BackButton;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { transition } from 'helpers';\n\nexport const CardStyled = styled.div`\n  display: flex;\n  gap: 50px;\n\n  @media screen and (max-width: 900px) {\n    flex-direction: column;\n  }\n\n  & .image {\n    width: 300px;\n    max-width: 100%;\n\n    & img {\n      display: block;\n      max-width: 100%;\n    }\n  }\n\n  & .title {\n    font-weight: 300;\n    font-size: 28px;\n    color: #fffffff4;\n    margin-bottom: 30px;\n  }\n\n  & .date {\n    font-weight: 300;\n    font-size: 16px;\n    color: ${colors.color1};\n    margin-bottom: 30px;\n\n    & span {\n      color: ${colors.color2};\n    }\n  }\n\n  & .overview {\n    font-weight: 300;\n    font-size: 18px;\n    color: #ffffffc5;\n    margin-bottom: 30px;\n    max-width: 600px;\n    line-height: 1.6;\n    word-break: break-word;\n  }\n\n  & .link {\n    font-weight: 300;\n    font-size: 16px;\n    color: ${colors.color1};\n    margin-bottom: 30px;\n    display: block;\n    display: flex;\n    align-items: center;\n    ${transition('opacity')};\n\n    &:hover {\n      opacity: 0.8;\n    }\n\n    & .icon {\n      margin-right: 5px;\n    }\n  }\n\n  & .genres {\n    font-weight: 300;\n    font-size: 16px;\n    color: ${colors.color2};\n    display: flex;\n    gap: 10px 20px;\n    margin-bottom: 30px;\n\n    @media screen and (max-width: 425px) {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n\n    & span {\n      padding: 5px 12px;\n      border-left: 1px solid ${colors.color2};\n      border-right: 1px solid ${colors.color2};\n      background-color: rgb(0, 0, 0, 0.1);\n      border-radius: 20px;\n      box-shadow: 0px 0px 10px 0px rgba(255, 217, 0, 0.2);\n      font-weight: 400;\n    }\n  }\n`;\n","import { CardStyled } from './Card.styled';\nimport { AiOutlineLink } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\n\nconst Card = ({ data }) => {\n  const { title, poster_path, genres, overview, release_date, homepage } = data;\n  return (\n    <CardStyled>\n      <div className=\"image\">\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n      </div>\n      <div className=\"info\">\n        <div className=\"title\">{title}</div>\n        <div className=\"date\">\n          Release date: <span>{release_date}</span>\n        </div>\n        <div className=\"overview\">{overview}</div>\n\n        {homepage && (\n          <a\n            href={homepage}\n            target=\"_blank\"\n            className=\"link\"\n            rel=\"noopener noreferrer\"\n          >\n            <AiOutlineLink className=\"icon\" />\n            Official webiste\n          </a>\n        )}\n        <div className=\"genres\">\n          {genres.map(item => (\n            <span key={item.id}>{item.name}</span>\n          ))}\n        </div>\n      </div>\n    </CardStyled>\n  );\n};\n\nCard.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.object),\n    overview: PropTypes.string,\n    release_date: PropTypes.string,\n    homepage: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Card;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { transition } from 'helpers';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkTab = styled(NavLink)`\n  color: rgba(255, 255, 255, 0.9);\n  font-size: 20px;\n  position: relative;\n  margin-right: 20px;\n  border: 1px dashed ${colors.color1};\n  padding: 5px 15px;\n  border-radius: 20px;\n  ${transition('opacity', 'box-shadow')};\n\n  &:hover {\n    opacity: 0.8;\n    box-shadow: 0px 0px 5px 2px ${colors.color1};\n  }\n\n  &.active {\n    color: ${colors.color2};\n    text-shadow: 0px 0px 10px ${colors.color1};\n\n    &:before {\n      content: '';\n      position: absolute;\n      left: 25%;\n      bottom: -2px;\n      width: 50%;\n      height: 3px;\n      border-radius: 100%;\n      background-color: ${colors.color2};\n    }\n  }\n`;\n","import BackButton from 'components/BackButton/BackButton';\nimport Card from 'components/Card/Card';\nimport { LinkTab } from 'components/Styled/LinkTab.styled';\nimport { fetchStatus } from 'constants';\nimport { useFetch } from 'hooks/useFetch';\nimport { useCallback } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetailsById } from 'services';\nimport { SubtitleStyled } from './../components/Styled/Subtitle.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const getMovieDetails = useCallback(async () => {\n    return await getMovieDetailsById({ movieId });\n  }, [movieId]);\n\n  const { data, status } = useFetch(getMovieDetails);\n\n  return (\n    <div>\n      <BackButton backlink={backLinkHref}></BackButton>\n      {status !== fetchStatus.LOADING && data && data.id && (\n        <>\n          <Card data={data} />\n          <SubtitleStyled>Additional information</SubtitleStyled>\n          <LinkTab to={'cast'} state={{ from: backLinkHref }}>\n            Cast\n          </LinkTab>\n          <LinkTab to={'reviews'} state={{ from: backLinkHref }}>\n            Reviews\n          </LinkTab>\n        </>\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport { theMovieDBApiKey } from 'constants';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: theMovieDBApiKey,\n};\n\nexport const findMoviesByQuery = async ({ query, page }) => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n\n  const { results, total_pages: totalPages, total_results: total } = data;\n  const reachedEnd = totalPages === page;\n\n  return { results, totalPages, total, reachedEnd, page };\n};\n\nexport const getTrandingMovies = async ({ page, filter }) => {\n  const { data } = await axios.get(`trending/movie/${filter}`, {\n    params: {\n      page,\n    },\n  });\n\n  const { results, total_pages: totalPages, total_results: total } = data;\n  const reachedEnd = totalPages === page;\n\n  return { results, totalPages, total, reachedEnd, page };\n};\n\nexport const getMovieDetailsById = async ({ movieId }) => {\n  const { data } = await axios.get(`movie/${movieId}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\nexport const getCast = async ({ movieId }) => {\n  const { data } = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\nexport const getReviews = async ({ movieId, page }) => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n      page,\n    },\n  });\n\n  const { results, total_pages: totalPages, total_results: total } = data;\n  const reachedEnd = totalPages === page;\n\n  return { results, totalPages, total, reachedEnd, page };\n};\n"],"names":["SubtitleStyled","styled","colors","useFetch","callback","isInitialRequest","useState","data","setData","fetchStatus","status","setStatus","useEffect","fetchData","toast","message","useFetchPages","prev","results","undefined","length","page","BackButtonStyled","transition","backlink","to","className","CardStyled","title","poster_path","genres","overview","release_date","homepage","src","alt","href","target","rel","map","item","name","id","LinkTab","NavLink","movieId","useParams","backLinkHref","useLocation","state","from","getMovieDetails","useCallback","getMovieDetailsById","axios","api_key","theMovieDBApiKey","findMoviesByQuery","query","params","totalPages","total_pages","total","total_results","reachedEnd","getTrandingMovies","filter","language","getCast","getReviews"],"sourceRoot":""}